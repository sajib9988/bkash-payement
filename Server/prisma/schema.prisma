generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  COMPLETED
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  devices   Device[]
  orders    Order[]
  payments  Payment[]
}

model Device {
  id         String   @id @default(uuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  userAgent  String
  ipAddress  String
  lastActive DateTime @default(now())
  createdAt  DateTime @default(now())
}

model Product {
  id          String   @id @default(uuid())
  title       String
  description String?
  price       Float
  image       Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orderItems  OrderItem[]
}

model Order {
  id             String        @id @default(uuid())
  userId         String
  totalAmount    Float
  status         PaymentStatus @default(PENDING)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  shippingName    String
  shippingPhone   String
  shippingStreet  String
  shippingCity    String
  shippingZip     String
  shippingCountry String

  user        User          @relation(fields: [userId], references: [id])
  payment     Payment?
  orderItems  OrderItem[]
}


model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int      @default(1)
  price     Float

  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Payment {
  id                 String        @id @default(uuid())
  orderId           String        @unique
  userId            String
  amount            Float
  invoice           String
  status            PaymentStatus @default(PENDING)
  transactionId     String?       @unique
  paymentGatewayData Json?

  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  order             Order         @relation(fields: [orderId], references: [id])
  user              User          @relation(fields: [userId], references: [id])
}
