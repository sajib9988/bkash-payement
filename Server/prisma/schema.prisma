generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum MediaType {
  MOVIE
  SERIES
}

enum PaymentMethod {
  ONLINE
  CASH
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  COMPLETED 
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Device Device[]

  Payment Payment[]

  Order Order[]
}

model Device {
  id         String   @id @default(uuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  userAgent  String
  ipAddress  String
  lastActive DateTime @default(now())
  createdAt  DateTime @default(now())
}

model Product {
  id          String   @id @default(uuid())
  title       String
  description String?
  price       Float
  image       Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Order Order[]
}

model Order {
  id          String        @id @default(uuid())
  userId      String
  productId   String
  quantity    Int           @default(1)
  totalAmount Float
  status      PaymentStatus @default(PENDING)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Payment {
  id                 String        @id @default(uuid())
  userId             String

  amount             Float
  invoice            String
  method             PaymentMethod @default(ONLINE)
  status             PaymentStatus @default(PENDING)
  transactionId      String?       @unique
  paymentGatewayData Json?

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
